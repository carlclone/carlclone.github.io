type TreeNode struct {
	Val   int
	Left  *TreeNode
	Right *TreeNode
}

func pathSum(root *TreeNode, targetSum int) int {
	if root==nil {
		return 0
	}
	//遍历每个节点,每个节点都进行一次 walk , 相加
	res:=walk(root,targetSum)
	//没想到这一层的递归 , 想的是 BFS 遍历相加的写法 , DFS 遍历的没想到
	res+=pathSum(root.Left,targetSum)
	res+=pathSum(root.Right,targetSum)
	return res
}

// 单个节点往下延伸有多少个 path sum
func walk(root *TreeNode,targetSum int) int {
	if root==nil {
		return 0
	}

	remain:=targetSum-root.Val

	//这个 edge case 没想到
	res:=0
	if remain==0 {
		res+=1
	}

	return res+walk(root.Left,remain) + walk(root.Right,remain)
}
