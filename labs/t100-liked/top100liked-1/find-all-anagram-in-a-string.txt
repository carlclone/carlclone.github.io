import "fmt"

func main() {
	fmt.Println(findAnagrams("cbaebabacd", "abc"))
}

/*
Input: s = "abab", p = "ab"
Output: [0,1,2]
Explanation:
The substring with start index = 0 is "ab", which is an anagram of "ab".
The substring with start index = 1 is "ba", which is an anagram of "ab".
The substring with start index = 2 is "ab", which is an anagram of "ab".
*/

func findAnagrams(s string, p string) []int {
	res := make([]int, 0)
	if len(p) > len(s) {
		return []int{}
	}

	l := 0
	pFreq := getFreq(p)
	sFreq := getFreq(s[:len(p)])

	if isSame(pFreq, sFreq) {
		res = append(res, l)
	}

	for r := len(p); r < len(s); {
		sFreq[s[r]]++ //adding new char
		sFreq[s[l]]-- //removing prev char

		if sFreq[s[l]] == 0 {
			delete(sFreq, s[l])
		}

		l++
		r++
		if isSame(pFreq, sFreq) {
			res = append(res, l)
		}
	}
	return res
}

func isSame(a, b map[byte]int) bool {
	if len(a) != len(b) {
		return false
	}
	for k := range a {
		if a[k] != b[k] {
			return false
		}
	}
	return true
}

func getFreq(str string) map[byte]int {
	freq := make(map[byte]int)
	for i := 0; i < len(str); i++ {
		freq[str[i]]++
	}
	return freq
}
